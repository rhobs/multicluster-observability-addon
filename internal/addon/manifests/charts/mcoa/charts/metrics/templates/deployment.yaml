{{- if .Values.enabled }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: metrics-addon-agent
  namespace: {{ .Values.addonInstallNamespace }}
  labels:
    app.kubernetes.io/part-of: multicluster-observability-addon
    app.kubernetes.io/component: metrics-agent
    app.kubernetes.io/instance: metrics-agent
    app.kubernetes.io/name: metrics-addon-agent
    app.kubernetes.io/version: 2.48.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: multicluster-observability-addon
      app.kubernetes.io/component: metrics-agent
      app.kubernetes.io/instance: metrics-agent
      app.kubernetes.io/name: metrics-addon-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: multicluster-observability-addon
        app.kubernetes.io/component: metrics-agent
        app.kubernetes.io/instance: metrics-agent
        app.kubernetes.io/name: metrics-addon-agent
    spec:
      serviceAccountName: multicluster-observability-addon:metrics:agent
      volumes:
        - name: prometheus-config-volume
          configMap:
            name: prometheus-agent-conf
            defaultMode: 420
        - name: prometheus-storage-volume
          emptyDir: {}
        - name: serving-certs-ca-bundle
          configMap:
            name: metrics-collector-serving-certs-ca-bundle
        - name: mtlsca
          secret:
            secretName: observability-managed-cluster-certs
        - name: mtlscerts
          secret:
              secretName: observability-controller-open-cluster-management.io-observability-signer-client-cert
      dnsPolicy: ClusterFirst
      terminationGracePeriodSeconds: 30
      containers:
        - name: prometheus-agent
          ports:
            - containerPort: 9090
              protocol: TCP
          resources:
            requests:
              cpu: 500m
              memory: 500M
            limits:
              cpu: 1
              memory: 1Gi
          imagePullPolicy: IfNotPresent
          restartPolicy: Always
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
            - name: mtlscerts
              readOnly: true
              mountPath: /tlscerts/certs
            - name: mtlsca
              readOnly: true
              mountPath: /tlscerts/ca
            - name: serving-certs-ca-bundle
              mountPath: /etc/serving-certs-ca-bundle
              readOnly: true
          image: "quay.io/prometheus/prometheus:v2.48.1"
          args:
            - "--log.level=debug"
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--web.enable-lifecycle"
            - "--enable-feature=agent"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
{{- end }}
